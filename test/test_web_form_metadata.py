# coding: utf-8

"""
    Web Forms API version 1.1

    The Web Forms API facilitates generating semantic HTML forms around everyday contracts. 

    The version of the OpenAPI document: 1.1.0
    Contact: devcenter@docusign.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.web_form_metadata import WebFormMetadata

class TestWebFormMetadata(unittest.TestCase):
    """WebFormMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebFormMetadata:
        """Test WebFormMetadata
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebFormMetadata`
        """
        model = WebFormMetadata()
        if include_optional:
            return WebFormMetadata(
                source = 'templates',
                owner = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                sender = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                last_modified_by = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                form_content_modified_by = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                form_properties_modified_by = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                last_published_by = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                last_enabled_by = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                last_disabled_by = openapi_client.models.web_form_user_info.WebFormUserInfo(
                    user_id = '00000000-0000-0000-0000-000000000000', 
                    user_name = 'John Doe', ),
                archived_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                form_content_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                form_properties_modified_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_published_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_enabled_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_disabled_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_sender_consent_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                published_slug = 'BFS6Zw9QxKnerieBsgRyif',
                published_component_names = {
                    'key' : 'CheckboxGroup'
                    }
            )
        else:
            return WebFormMetadata(
        )
        """

    def testWebFormMetadata(self):
        """Test WebFormMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
