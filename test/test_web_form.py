# coding: utf-8

"""
    Web Forms API version 1.1

    The Web Forms API facilitates generating semantic HTML forms around everyday contracts. 

    The version of the OpenAPI document: 1.1.0
    Contact: devcenter@docusign.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.web_form import WebForm

class TestWebForm(unittest.TestCase):
    """WebForm unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebForm:
        """Test WebForm
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebForm`
        """
        model = WebForm()
        if include_optional:
            return WebForm(
                id = '00000000-0000-0000-0000-000000000000',
                account_id = '00000000-0000-0000-0000-000000000000',
                is_published = True,
                is_enabled = True,
                has_draft_changes = True,
                form_state = 'active',
                form_properties = openapi_client.models.web_form_properties.WebFormProperties(
                    name = 'Patient Intake Forms', 
                    is_private_access = True, ),
                form_metadata = {source=template, owner={userId=00000000-0000-0000-0000-000000000000, userName=DocuSign User}, sender={userId=00000000-0000-0000-0000-000000000000, userName=Sam Sender}, formContentModifiedBy={userId=00000000-0000-0000-0000-000000000000, userName=Mary Modifier}, formPropertiesModifiedBy={userId=00000000-0000-0000-0000-000000000000, userName=Fred Modifier}, lastPublishedBy={userId=00000000-0000-0000-0000-000000000000, userName=Pam Publisher}, lastEnabledBy={userId=00000000-0000-0000-0000-000000000000, userName=Everly Enabler}, lastDisabledBy={userId=00000000-0000-0000-0000-000000000000, userName=Dan Disabler}, archivedDateTime=2022-01-01T10:30:00Z, createdDateTime=2021-09-01T10:30:00Z, lastModifiedDateTime=2021-09-01T10:30:00Z, formContentModifiedDateTime=2021-09-01T10:30:00Z, formPropertiesModifiedDateTime=2021-09-01T10:30:00Z, lastPublishedDateTime=2021-09-01T10:30:00Z, lastEnabledDateTime=2021-09-01T10:30:00Z, lastDisabledDateTime=2021-09-01T10:30:00Z, lastSenderConsentDateTime=2021-09-01T10:30:00Z, publishedSlug=a535041793dd266079763bbf1c965292},
                version_id = 1,
                form_content = openapi_client.models.web_form_content.WebFormContent(
                    components = {"Root_Of_Journey":{"componentKey":"Root_Of_Journey","componentType":"Root","children":["Step_abc123"]},"TextBox_ABC123":{"componentKey":"TextBox_ABC123","componentType":"TextBox","componentName":"Full_Name","label":"Full Name","maxLength":100,"multiLine":false,"placeholder":"John Adams","required":true},"Step_abc123":{"componentKey":"Step_abc123","componentType":"Step","componentName":"Step_abc123","text":"Patient Demographics"}}, 
                    is_standalone = True, 
                    brand_id = '00000000-0000-0000-0000-000000000000', 
                    templates = [
                        {originalTemplateId=00000000-0000-0000-0000-000000000000, clonedTemplateId=00000000-0000-0000-0000-000000000000, importDateTime=2021-09-01T10:30:00Z, recipientIds=[00000000, 00000001]}
                        ], )
            )
        else:
            return WebForm(
        )
        """

    def testWebForm(self):
        """Test WebForm"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
